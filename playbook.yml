- name: Build documentation
  hosts: localhost
  gather_facts: False
  tasks:
    - name: Get shortened commit hash
      command:
        cmd: git rev-parse --short HEAD
      register: short_commit_hash
    - name: Generate a secret
      set_fact:
        secret: "{{ lookup('password', '/dev/null length=16') }}"
    - name: Create directory structure
      file:
        state: directory
        path: "{{ item }}"
      with_items:
        - "{{ playbook_dir }}/_docs/chapters"
        - "{{ playbook_dir }}/_docs/graphics"
        - "{{ playbook_dir }}/_docs/diagrams"
        - "{{ playbook_dir }}/release"
    - name: Create index from template
      template:
        src: index.rst.j2
        dest: "{{ playbook_dir }}/_docs/index.rst"
    - name: Create chapters from template
      template:
        src: "{{ item }}"
        dest: '{{ playbook_dir }}/_docs/chapters/{{ item | basename | regex_replace("\.j2$", "") }}'
      with_fileglob:
        - "chapters/*.rst.j2"
    - name: Perform RST linting
      command:
        cmd: doc8 --max-line-length 2000 "{{ playbook_dir }}/_docs/chapters"
    - name: Copy graphics
      copy:
        src: "{{ item }}"
        dest: "{{ playbook_dir }}/_docs/graphics"
      with_fileglob:
        - "graphics/*.png"
    - name: Copy diagrams scripts
      template:
        src: "{{ item }}"
        dest: '{{ playbook_dir }}/_docs/diagrams/{{ item | basename | regex_replace("\.j2$", "") }}'
      with_fileglob: templates/diagrams/*.py.j2
    - name: Render diagrams
      shell: python3 {{ item }}
      args:
        chdir: "{{ playbook_dir }}/_docs/diagrams"
      with_fileglob: "{{ playbook_dir }}/_docs/diagrams/*.py"
    - name: Create Sphinx configuration
      template:
        src: conf.py.j2
        dest: "{{ playbook_dir }}/_docs/conf.py"
    - name: Copy Sphinx files
      copy:
        src: "{{ item }}"
        dest: "{{ playbook_dir }}/_docs"
      with_items:
        - Makefile
        - mycustomstyle.sty
        - atea.png
        - atea_aligned.png

    - name: Build PDF
      make:
        chdir: "{{ playbook_dir }}/_docs"
        target: latexpdf
    - name: Build HTML
      make:
        chdir: "{{ playbook_dir }}/_docs"
        target: html
    - name: Create installation package
      community.general.archive:
        path:
          - "{{ playbook_dir }}/_docs/_build/html"
          - "{{ playbook_dir }}/_docs/_build/latex/system-documentation.pdf"
        format: zip
        dest: "{{ playbook_dir }}/release/system-documentation.zip"
    - name: Build assessment bundle
      shell: "sh build.sh"
      args:
        chdir: "files/pki-assessment"
    - name: Create sales documentation
      shell: "python3 render.py"
      args:
        chdir: "files/sales"