- name: Get shortened commit hash
  command:
    cmd: git rev-parse --short HEAD
  register: short_commit_hash
- name: Create directory structure
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "{{ playbook_dir }}/_docs/chapters"
    - "{{ playbook_dir }}/_docs/graphics"
    - "{{ playbook_dir }}/_docs/templates"
    - "{{ playbook_dir }}/_docs/diagrams"
    - "{{ playbook_dir }}/release"
- name: Copy graphics
  copy:
    src: "{{ item }}"
    dest: "{{ playbook_dir }}/_docs/graphics"
  with_fileglob:
    - "graphics/*.png"
- name: Parse LDIF configuration
  shell:
    cmd: python3 {{ playbook_dir }}/roles/naming_document/files/parse.py --file {{ playbook_dir }}/files/naming_document/Configuration.ldf
  register: public_key_services_configuration
- name: Extract certificate templates from configuration
  shell:
    cmd: python3 "{{ playbook_dir }}/roles/naming_document/extract_templates.py --file {{ playbook_dir }}/files/Configuration.ldf --output-directory {{ playbook_dir }}/files/naming_document/ldif
  when: extras.naming_and_profile_document.include_ldif | default(false)
- name: Create index from template
  template:
    src: index.rst.j2
    dest: "{{ playbook_dir }}/_docs/index.rst"
- name: Create chapters from template
  template:
    src: "{{ item }}"
    dest: '{{ playbook_dir }}/_docs/chapters/{{ item | basename | regex_replace("\.j2$", "") }}'
  with_fileglob:
    - "chapters/*.rst.j2"
- name: Perform RST linting
  command:
    cmd: doc8 --max-line-length 2000 "{{ playbook_dir }}/_docs/chapters"
- name: Copy diagrams scripts
  template:
    src: "{{ item }}"
    dest: '{{ playbook_dir }}/_docs/diagrams/{{ item | basename | regex_replace("\.j2$", "") }}'
  with_fileglob: templates/diagrams/*.py.j2
- name: Render diagrams
  shell: python3 {{ item }}
  args:
    chdir: "{{ playbook_dir }}/_docs/diagrams"
  with_fileglob: "{{ playbook_dir }}/_docs/diagrams/*.py"
- name: Create Sphinx configuration
  template:
    src: conf.py.j2
    dest: "{{ playbook_dir }}/_docs/conf.py"
- name: Copy Sphinx files
  copy:
    src: "{{ item }}"
    dest: "{{ playbook_dir }}/_docs"
  with_items:
    - Makefile
    - mycustomstyle.sty
    - atea.png
    - atea_aligned.png
- name: Build PDF
  make:
    chdir: "{{ playbook_dir }}/_docs"
    target: latexpdf
- name: Copy PDF to release folder
  copy:
    src: "{{ playbook_dir }}/_docs/_build/latex/naming-document.pdf"
    dest: "{{ playbook_dir }}/release/naming-document.pdf"
